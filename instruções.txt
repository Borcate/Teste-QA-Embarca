## instru√ß√µes:

#Testes: 
- Login;
- Busca pela rota;
- Selecionar poltrona;
- Preencher dados do passageiro.

# Pr√©-requisitos

Os seguintes sistemas foram instalados.(em janeiro de 2024)
- [Node.js](https://nodejs.org/en/) (estou usando a vers√£o `v18.16.0`)
- npm (estou usando a vers√£o `9.8.0` enquanto realizo os testes)
- [Google Chrome](https://www.google.com/intl/pt_br/chrome/) (estou usando a vers√£o `Vers√£o 120.0.6099.225 (Vers√£o oficial) 64 bits`)
- [Visual Studio Code](https://code.visualstudio.com/) (estou usando a vers√£o `1.85.2` enquanto realizo os testes) ou alguma outra IDE de sua prefer√™ncia
>
> **Obs. 1:** Ao instalar o Node.js o npm √© instalado junto. üéâ
>
> **Obs. 2:** Para verificar as vers√µes  Node.js e npm instaladas em seu computador, execute o comando `node --version && npm --version` no seu terminal de linha de comando.

## Instala√ß√£o e inicializa√ß√£o do [Cypress](https://cypress.io) üå≤
1. Executar o comando `npm install cypress --save-dev` (ou `npm i cypress@13.6.3 -D` para a vers√£o curta) > para vers√£o utilizada durante os testes
2. Executar o comando `npx cypress open` para abrir o Cypress pela primeira vez
3. Selecionar a op√ß√£o E2E Testing 
4. Selecionar o browser 
5. Clicar em Start
6. Selecionar Specs
## Documenta√ß√£o ##
> https://docs.cypress.io/guides/end-to-end-testing/writing-your-first-end-to-end-test <

## Npm Scripts 
    "npx cypress open" -> Para abrir o Test Runner e executar o novo teste em modo interativo
    "npx cypress run" -> Para executar o novo teste em modo headless


## Teste APP Embarca.ai ##
> Fluxo de teste de compra no App
- Login
    Login bem-sucedido
    Abrir aplicativo em dispositivo Android / iOs
    Inserir "testeqa@embarca.ai" no campo de e-mail
    Inserir "Arca123" no campo de senha
    Clicar no bot√£o "Entrar"
    Deve exibir a tela inicial para sele√ß√£o do destino

- Selecionar destino
    Exibir a tela inicial para sele√ß√£o do destino
    Buscar por cidade de sa√≠da, deve exibir op√ß√µes de acordo com a pesquisa realizada 
    Buscar por cidade de destino, deve exibir op√ß√µes de acordo com a pesquisa realizada 
    Selecionar data de sa√≠da, deve exibir calend√°rio para sele√ß√£o de data
    N√£o deve permitir selecionar datas inferiores a data de hoje
    Selecionar data de volta, deve exibir calend√°rio para sele√ß√£o de data
    N√£o deve permitir selecionar datas inferiores a data de sa√≠da
    Clicar no bot√£o "Buscar passagens"
- Selecionar poltronas
    Selecionar viagem
    Clicar no bot√£o "Reservar poltrona", deve tela para sele√ß√£o de poltrona
    Selecionar poltronas livres 
    Clicar no bot√£o "Continuar"
- Informar dados do passageiro
    Ao clicar em continuar, deve exibir a tela de resumo da viajem 
    Informar o CEP do passageiro
    Informar Nome do passageiro
    Informar RG do passageiro
    Clicar no bot√£o "Continuar para o pagamento"
    N√£o permitir prosseguir se o campo CEP n√£o estiver preenchido, deve exibir mensagem de alerta
    N√£o permitir prosseguir se o campo Nome n√£o estiver preenchido, deve exibir mensagem de alerta
    N√£o permitir prosseguir se o campo Documento n√£o estiver preenchido, deve exibir mensagem de alerta
    Preencher todos os campos, deve permitir prosseguir para pr√≥xima tela 
- Pagamento
    Tela de pagamento deve exibir op√ß√µes de pagamento 
    Op√ß√£o pix, ao clicar nessa op√ß√£o deve exibir um c√≥digo qr code para escanear e efetuar pagamento
    Op√ß√£o cart√£o dee cr√©dito, ao clicar nessa op√ß√£o deve exibir um campo inserir os dados do cart√£o de cr√©dito e efetuar pagamento
    Passar dados de cart√£o inv√°lidos, ao confirmar deve mensagem de erro 
    Passar dados de cart√£o v√°lidos, ao confirmar deve efetuar pagamento com sucesso 

    ## Ferramentas de automatiza√ß√£o ##
    - Appium
        Pois oferece uma abordagem eficaz para criar testes robustos e compreens√≠veis. 



